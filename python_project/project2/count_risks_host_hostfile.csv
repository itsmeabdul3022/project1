import pandas as pd

def run_compliance_reports(data_filename, hosts_filename):
    """
    Reads a data file and a list of hosts, then generates a compliance report for each host.

    Args:
        data_filename (str): The name of the main data file (e.g., 'your_data_file.csv').
        hosts_filename (str): The name of the CSV file containing the list of hosts (e.g., 'hosts.csv').
    """
    try:
        # Read the main data file, keeping default NA values as strings
        df_data = pd.read_csv(data_filename, keep_default_na=False)
        
        # Read the list of hosts from the hosts file
        df_hosts = pd.read_csv(hosts_filename)
        
        # Get the list of hosts from the DataFrame
        host_list = df_hosts.iloc[:, 0].astype(str).str.lower().tolist()

        # Convert the 'Host' column in the data to lowercase for consistent searching
        df_data['Host'] = df_data['Host'].astype(str).str.lower()
        
        # Check for required columns in the main data file
        if 'Host' not in df_data.columns or 'Risk' not in df_data.columns:
            print("Error: The data file must contain 'Host' and 'Risk' columns.")
            return

        print("\n--- Generating Compliance Reports ---")
        
        # Loop through each host in the list
        for target_host in host_list:
            
            # Filter the DataFrame for the current host
            host_data = df_data[df_data['Host'] == target_host]

            if host_data.empty:
                print(f"\nNo data found for the host: {target_host}")
                continue

            # Count the occurrences of each risk level
            risk_counts = host_data['Risk'].value_counts()
            
            # Define the specific risk levels
            passed_levels = ['None']
            failed_levels = ['High', 'Medium', 'Low']
            
            # Calculate passed and failed counts
            passed_count = 0
            failed_count = 0
            
            for level, count in risk_counts.items():
                if level in passed_levels:
                    passed_count += count
                elif level in failed_levels:
                    failed_count += count

            total_records = passed_count + failed_count
            
            # Calculate compliance percentage
            if total_records > 0:
                compliance_percentage = (passed_count / total_records) * 100
            else:
                compliance_percentage = 0.0

            print(f"\n--- Compliance Report for Host: {target_host} ---")
            print(f"Total Records: {total_records}")
            print(f"Passed: {passed_count}")
            print(f"Failed: {failed_count}")
            print(f"Compliance Percentage: {compliance_percentage:.2f}%")
        
        print("\n--- Report Generation Complete ---")

    except FileNotFoundError as e:
        print(f"Error: A required file was not found: {e.filename}. Please check your file names.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")

if __name__ == "__main__":
    # Replace these filenames with your actual file names
    main_data_file = 'SEPT 2025-AIX.csv'
    hosts_list_file = 'hosts.csv'
    
    run_compliance_reports(main_data_file, hosts_list_file)

